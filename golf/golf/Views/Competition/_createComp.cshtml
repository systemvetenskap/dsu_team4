@model golf.Models.CreateComp

<script type="text/javascript">
    $(document).ready(function () {

        $('.dt').datepicker();
        $('.dt2').datepicker();
        $('.dt3').datepicker();

        $('#dt').datepicker('option', 'dateFormat', 'yy-mm-dd');
        $('#dt').datepicker('setDate', new Date());

        $(function () {
            $("#dt1").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                }
            });
        });

        $(function () {
            $("#dt2").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                    alert("test2");
                }
            });
        });
        $(function () {
            $("#dt3").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                    alert("test3");
                }
            });
        });

    });
</script>         

    @using (Html.BeginForm("saveComp", "Competition", FormMethod.Post, null))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="createcompetition" id="createcompetition">
            <fieldset>
                <legend>Person</legend>

                <div class="editor-label">
                    @Html.Raw("Namn")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.newComp.name)
                    @Html.ValidationMessageFor(model => model.newComp.name)
                </div>
                <div class="editor-label">
                    @Html.Raw("Antal hål")
                </div>
                <div class="editor-field">
                    @{List<SelectListItem> holes = new List<SelectListItem>();
                        holes.Add(new SelectListItem { Text = "9", Value = "9" });
                        holes.Add(new SelectListItem { Text = "18", Value = "18" });
                    }
                    @Html.DropDownListFor(model => model.newComp.NumberOfHoles, holes,"--Antal hål--", new { id = "holes", @class = "holes" })
                </div>
                <div class="editor-label">
                    @Html.Raw("Antal spelare")
                </div>
                <div class="editor-field">
                    @{List<SelectListItem> players = new List<SelectListItem>();
                        players.Add(new SelectListItem { Text = "3", Value = "3" });
                        players.Add(new SelectListItem { Text = "4", Value = "4" });
                    }
                    @Html.DropDownListFor(model => model.newComp.playersPerTime, players, "--Välj antal spelare--", new { id = "numberofplayers", @class = "numberofplayers" })
                </div>
                <div class="editor-label">
                    @Html.Raw("Tävlingsdatum")
                </div>
                <div class="editor-field">

                    @Html.TextBoxFor(model => model.newComp.cDate, new { @class = "dt", placeholder = "Välj tävlingsdatum.." })
                    @Html.ValidationMessageFor(model => model.newComp.cDate)

                </div>
                <div class="editor-label">
                    @Html.Raw("Starttid")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.startTime, new SelectList(Model.sTimes, "Id", "teeTime1"), "Starttid", new { id = "starttime", @class = "starttime" })
                </div>
                <div class="editor-label">
                    @Html.Raw("Sluttid")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.endTime, new SelectList(Model.sTimes, "Id", "teeTime1"), "Sluttid", new { id = "endtime", @class = "endtime" })
                </div>

                <div class="editor-label">
                    @Html.Raw("Första anmälningsdatum")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.newComp.signUpFrom, new { @class = "dt", placeholder = "Välj första anmälningsdag.." })
                    @Html.ValidationMessageFor(model => model.newComp.signUpFrom)

                </div>

                <div class="editor-label">
                    @Html.Raw("Sista anmälningsdatum")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.newComp.signUpTo, new { @class = "dt", placeholder = "Välj sista anmälningsdag.." })
                    @Html.ValidationMessageFor(model => model.newComp.signUpTo)

                </div>

                <div class="editor-label">
                    @Html.Raw("Tävlingsklass")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.CompeteClass_ID, new SelectList(Model.classList, "Id", "Name"), "Tävlingsklass", new { id = "compclass", @class = "compclass" })
                </div>

                <div class="editor-label">
                    @Html.Raw("Kontaktperson")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.Person_IDc, new SelectList(Model.contactlist, "Id", "oneName"), "Kontaktperson", new { id = "contactperson", @class = "contactperson" })
                    @Html.ValidationMessageFor(model => model.newComp.Person_IDc)
                </div>

                <div class="editor-label">
                    @Html.Raw("Beskrivning/Övrig info")
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.newComp.info, 10, 40, htmlAttributes: new { style = "width: 90%; resize:none", ID = "textareainput" })
                    @Html.ValidationMessageFor(model => model.newComp.info)
                </div>

                    <p>
                        <input type="submit" class="buttonGreen" value="Spara" id="createcompetitionbutton" />
                    </p>
                <div class="buttonGreen">
                    @Html.ActionLink("Tillbaks", "Index")
                </div>
            </fieldset>

 <script type="text/javascript">

    /*För alla textboxar*/
        $('#createcompetitionbutton').click(function () {
        var isValid = 1;
        $('input:text').each(function () {
            if ($(this).val() == '') {
                $(this).css('border', '2px solid red');
                isValid = 0;
            }
            else {
                $(this).css('border', '1px solid green');
            }
        });
        if (isValid == 0) {
            return false;
        }
        });
    /*För textarea*/
        $('#createcompetitionbutton').click(function ()
        {
                    
                    if ($('#textareainput').val() <= 0)
                    {
                        $('#textareainput').css('border', '2px solid red');
                        return false;
                    }
                    else
                    {
                        $('#textareainput').css('border', '1px solid green');
                    }

    /*För dropdownlists enligt labels*/
                    /*Antal hål*/
                    if ($("#holes option:selected").index() == 0){
                        $('#holes').css('border', '2px solid red');
                        return false;
                    }
                    else
                    {
                        $('#holes').css('border', '1px solid green');
                    }
                    /*Antal spelare*/
                    if ($("#numberofplayers option:selected").index() == 0) {
                        $('#numberofplayers').css('border', '2px solid red');
                        return false;
                    }
                    else {
                        $('#numberofplayers').css('border', '1px solid green');
                    }
                    /*Start*/
                    if ($("#starttime option:selected").index() == 0) {
                        $('#starttime').css('border', '2px solid red');
                        return false;
                    }
                    else {
                        $('#starttime').css('border', '1px solid green');
                    }
                    /*Slut*/
                    if ($("#endtime option:selected").index() == 0) {
                        $('#endtime').css('border', '2px solid red');
                        return false;
                    }
                    else {
                        $('#endtime').css('border', '1px solid green');
                    }
                    /*Tävlingsklass*/
                    if ($("#compclass option:selected").index() == 0) {
                        $('#compclass').css('border', '2px solid red');
                        return false;
                    }
                    else {
                        $('#compclass').css('border', '1px solid green');
                    }
                    /*Kontaktperson*/
                    if ($("#contactperson option:selected").index() == 0) {
                        $('#contactperson').css('border', '2px solid red');
                        return false;
                    }
                    else {
                        $('#contactperson').css('border', '1px solid green');
                    }

                }
);
            </script>
        </div>
                        }
