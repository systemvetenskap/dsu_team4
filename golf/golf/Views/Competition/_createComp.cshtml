@model golf.Models.CreateComp

<script type="text/javascript">
    $(document).ready(function () {

        $('.dt').datepicker();
        $('.dt2').datepicker();
        $('.dt3').datepicker();

        $('#dt').datepicker('option', 'dateFormat', 'yy-mm-dd');
        $('#dt').datepicker('setDate', new Date());

        $(function () {
            $("#dt1").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                }
            });
        });

        $(function () {
            $("#dt2").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                    alert("test2");
                }
            });
        });
        $(function () {
            $("#dt3").datepicker({
                onSelect: function () {
                    var selected = $(this).val();
                    alert("test3");
                }
            });
        });

    });
</script>         

    @using (Html.BeginForm("saveComp", "Competition", FormMethod.Post, null))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="createcompetition" id="createcompetition">
            <fieldset>
                <legend>Person</legend>

                <div class="editor-label">
                    @Html.Raw("Namn")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.newComp.name)
                    @Html.ValidationMessageFor(model => model.newComp.name)
                </div>
                <div class="editor-label">
                    @Html.Raw("Antal höl")
                </div>
                <div class="editor-field">
                    @{List<SelectListItem> holes = new List<SelectListItem>();
                        holes.Add(new SelectListItem { Text = "9", Value = "9" });
                        holes.Add(new SelectListItem { Text = "18", Value = "18" });
                    }
                    @Html.DropDownListFor(model => model.newComp.NumberOfHoles, holes, "--Antal höl--")
                </div>
                <div class="editor-label">
                    @Html.Raw("Antal spelare")
                </div>
                <div class="editor-field">
                    @{List<SelectListItem> players = new List<SelectListItem>();
                        players.Add(new SelectListItem { Text = "3", Value = "3" });
                        players.Add(new SelectListItem { Text = "4", Value = "4" });
                    }
                    @Html.DropDownListFor(model => model.newComp.playersPerTime, players, "--Spelare per starttid--")
                </div>
                <div class="editor-label">
                    @Html.Raw("Tävlingsdatum")
                </div>
                <div class="editor-field">

                    @Html.TextBoxFor(model => model.newComp.cDate, new { @class = "dt", placeholder = "Välj tävlingsdatum.." })
                    @Html.ValidationMessageFor(model => model.newComp.cDate)

                </div>
                <div class="editor-label">
                    @Html.Raw("Start")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.startTime, new SelectList(Model.sTimes, "Id", "teeTime1"))
                </div>
                <div class="editor-label">
                    @Html.Raw("Slut")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.endTime, new SelectList(Model.sTimes, "Id", "teeTime1"))
                </div>

                <div class="editor-label">
                    @Html.Raw("Första anmälningsdatum")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.newComp.signUpFrom, new { @class = "dt", placeholder = "Välj första anmälningsdag.." })
                    @Html.ValidationMessageFor(model => model.newComp.signUpFrom)

                </div>

                <div class="editor-label">
                    @Html.Raw("Sista anmälningsdatum")
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.newComp.signUpTo, new { @class = "dt", placeholder = "Välj sista anmälningsdag.." })
                    @Html.ValidationMessageFor(model => model.newComp.signUpTo)

                </div>

                <div class="editor-label">
                    @Html.Raw("Tävlingsklass")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.CompeteClass_ID, new SelectList(Model.classList, "Id", "Name"))
                </div>

                <div class="editor-label">
                    @Html.Raw("Kontaktperson")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.newComp.Person_IDc, new SelectList(Model.contactlist, "Id", "oneName"), new {id="kontaktperson", @class="kontaktperson", placeholder ="--Välj kontaktperson--"})
                    @Html.ValidationMessageFor(model => model.newComp.Person_IDc)
                </div>

                <div class="editor-label">
                    @Html.Raw("Beskrivning/Övrig info")
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.newComp.info, 10, 40, htmlAttributes: new { style = "width: 90%; resize:none", ID = "textareainput" })
                    @Html.ValidationMessageFor(model => model.newComp.info)
                </div>
                <p>
                    <input type="submit" value="Spara" id="createcompetitionbutton" />
                </p>
            </fieldset>

            <script type="text/javascript">
                $('#createcompetitionbutton').click(function () {
        var isValid = 1;
        $('input:text').each(function () {
            if ($(this).val() == '') {
                $(this).css('border', '2px solid red');
                isValid = 0;
            }
            else {
                $(this).css('border', '1px solid green');
            }
        });
        if (isValid == 0) {
            return false;
        }
                });
                $('#createcompetitionbutton').click(function () {

                    if ($('#textareainput').val() <= 0)
                    {
                        $('#textareainput').css('border', '2px solid red');
                        return false;
                    }
                    else
                    {
                        $('#textareainput').css('border', '1px solid green');
                    }
                    /*Kommer ej åt dropdownboxarna*/
                    if ($('#kontaktperson').index == 0)
                    {
                        $('#kontaktperson').css('border', '2px solid red');
                        return false;
                    }
                    else
                    {
                        $('#kontaktperson').css('border', '1px solid green');
                    }
                    /**/
                }
);
            </script>
        </div>
                        }
