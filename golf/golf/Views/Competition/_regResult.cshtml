@model golf.Models.RegisterComp


<h2>Spelarlista</h2>
<br />

<h3>
    @Html.Label(Model.comp.name)
</h3>

@if (Model.comp.cDate.Date >= DateTime.Now.Date && Model.persongolfer.Count > 0)
{
    <div class="buttona">
        @Ajax.ActionLink("Lotta tider", "generateStartTimes", new {id = Model.comp.Id}, new AjaxOptions()
                {
                    UpdateTargetId = "showComp",
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace
                })
        </div>

        }


        <table id="playerTable">
            <thead>
                <tr>
                    <th>
                        @Html.Label("Golfare")
                    </th>
                    <th>
                        @Html.Label("Starttid")
                    </th>
                    <th>
                        @Html.Label("Registrera")
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.persongolfer)
        {
                    <tr>
                        <td>
                            @Html.Label(item.firstName + " " + item.lastName)
                        </td>
                        <td class="sortnr">
                            @Html.Label(item.startime.ToString())
                        </td>
                        <td>
                   @if (item.points != null)
                   {
                    <p><font color="green">Registrerat</font></p>
                   }
                   else
                   {

                    @Ajax.ActionLink("Registrera resultat", "regResultPerson", new { personid = item.personid, compID = Model.comp.Id, regComp = Model }, new AjaxOptions()
                    {
                        UpdateTargetId = "showComp",
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace
                    })
                   }

                        </td>
                    </tr>
        }
            </tbody>


        </table>

        @*@Html.LabelFor(m => m.comp.Person.lastName)

            @Html.Label("Hål | Slag")*@

        @*foreach (var hole in Model.holes)
            {

                @Html.Label(hole.Number)
                @Html.EditorFor(m => m.holeStats[hole.Id])
                <br />
            }*@


        @*@for (int i = 0; i < Model.holes.Count; i++)
            {
                @Html.Label(Model.holes[i].Number)
                @Html.EditorFor(m => m.holeStats[i].stroaks)
                <br />
            }*@
        <script type="text/javascript">

            function sortTable() {

                var tbl = document.getElementById("playerTable").tBodies[0];
                var store = [];
                for (var i = 0, len = tbl.rows.length; i < len; i++) {
                    var row = tbl.rows[i];
                    var it = row.cells[1].innerText;
                    var sub1 = it.substring(0, 2);
                    var sub2 = it.substring(3, 5)

                    var sortnr = parseFloat(sub1 + sub2);
                    if (!isNaN(sortnr)) store.push([sortnr, row]);
                }
                store.sort(function (x, y) {
                    return x[0] - y[0];
                });
                for (var i = 0, len = store.length; i < len; i++) {
                    tbl.appendChild(store[i][1]);
                }
                store = null;
            }
            sortTable();


        </script>
